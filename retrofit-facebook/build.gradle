buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        //classpath 'com.android.tools.build:gradle:2.0.0-alpha1'
        classpath 'com.android.tools.build:gradle:1.2.3'
        classpath 'me.tatarka:gradle-retrolambda:3.2.4'
        classpath 'com.novoda:bintray-release:0.3.4'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'

retrolambda {
    // ```bash
    // export JAVA8_HOME="/usr/lib/jvm/java-8-oracle"
    // export JAVA7_HOME="/usr/lib/jvm/java-7-oracle"
    // export JAVA_HOME="$JAVA8_HOME"
    // ```
    //jvmArgs '-noverify'
    jdk System.getenv("JAVA8_HOME")
    //oldJdk System.getenv("JAVA_HOME")
    oldJdk System.getenv("JAVA7_HOME")
    javaVersion JavaVersion.VERSION_1_7
}

repositories {
    jcenter()
}

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 22
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    compile 'com.squareup.retrofit:retrofit:2.0.0-beta2'
    compile 'com.squareup.retrofit:adapter-rxjava:2.0.0-beta2'
    compile 'com.squareup.retrofit:converter-gson:2.0.0-beta2'
    compile 'com.squareup.okhttp:okhttp:2.6.0'
    compile 'io.reactivex:rxjava:1.0.7'
    //compile 'io.reactivex:rxandroid:0.24.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.0'
    //testCompile 'org.skyscreamer:jsonassert:1.2.3'
    testCompile 'org.mockito:mockito-core:1.10.19'
    //testCompile 'com.squareup.okhttp:mockwebserver:2.4.0'
}

//tasks.withType(JavaCompile) {
    //options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
//}

tasks.withType(Test) {
  testLogging {
    exceptionFormat "full"
    //events "passed", "skipped", "failed"
    events "passed", "skipped", "failed", "standardOut", "standardError"
    showStandardStreams = true
  }
}

apply plugin: 'com.novoda.bintray-release'

def getRepositoryUsername() {
    return hasProperty('BINTRAY_USER') ? BINTRAY_USER : ""
}

def getRepositoryPassword() {
    return hasProperty('BINTRAY_KEY') ? BINTRAY_KEY : ""
}

publish {
    userOrg = 'yongjhih'
    groupId = 'com.infstory'
    artifactId = 'retrofit-facebook'
    uploadName = 'RetrofitFacebook'
    publishVersion = '1.0.0'
    desc = 'Unofficial Graph Facebook SDK'
    website = 'https://github.com/yongjhih/retrofit-facebook'
    bintrayUser = getRepositoryUsername()
    bintrayKey = getRepositoryPassword()
    dryRun = false
}

apply plugin: 'com.github.dcendents.android-maven'
apply from: 'android-javadoc.gradle'
